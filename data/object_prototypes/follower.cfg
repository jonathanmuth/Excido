{
id: "follower",
mass: 5,
friction: 1000,
traction: 1000,
traction_in_air: 1000,
has_feet: false,
solid_dimensions: ["enemy","common"],
activation_border: 150,
properties: {
	attack_damage: 1,
	team: "'evil'",
	target_y: "def() vars.desired_y",
	target_x: "def() vars.desired_x",

	//designed to be overridden in derived objects
	fly_y_adjustment: 0,
	handle_damage_type: "def(collide_with)
						if(collide_with.damage_type = 'stun', set(type, consts.thrown_type), animation('fly'))",
},
vars: {
	points_value: 75,
	turns_at_cliffs: 0,
	last_turned: 0,
},
consts: {
	springiness: 190,
	spring_amount: 1200,
	bounce_roundness: 10,
	basic_animation: "stand",
	basic_type: "null",
	solid_dimensions: ["enemy","common"],
},

on_create: "[animation('normal'), if(vars.desired_x = null, set(vars.desired_x, midpoint_x)), set(activation_border, abs(vars.x_bound - vars.x2_bound))]",

#
#
# collision handling:	
on_collide_side: "set(velocity_x, -velocity_x/2)",
on_collide_head: "set(velocity_y, -velocity_y/2)",
on_collide_feet: "set(velocity_y, -velocity_y/2)",

#
#
# animation switching:

on_test_bounds: "[if(not animation in ['turn'],if(facing < 0 and x < vars.x_bound or
	                facing > 0 and x2 > vars.x2_bound,
					fire_event('normal')))]",
on_process_normal: "[if(solid(level, front + facing*100, y, 1, y2 - y),
	            fire_event('normal')),fire_event('test_bounds'),
	            set(velocity_y, wave( min(350,max(-250, destination_y-midpoint_y ) ) )),
	            set(velocity_x, wave( min(350,max(-250, destination_x-midpoint_x ) ) ))
	            ] where destination_y = target_y() + altitude_adjustment, where destination_x = target_x() + altitude_adjustment",
	            
on_process_moveleft: "[if(solid(level, front + facing*100, y, 1, y2 - y),
	            fire_event('moveleft')),fire_event('test_bounds'),
	            set(velocity_y, wave( min(350,max(-250, destination_y-midpoint_y ) ) )),
	            set(velocity_x, wave( min(350,max(-250, destination_x-midpoint_x ) ) ))
	            ] where destination_y = target_y() + altitude_adjustment, where destination_x = target_x() + altitude_adjustment",
	            
on_process_moveright: "[if(solid(level, front + facing*100, y, 1, y2 - y),
	            fire_event('moveright')),fire_event('test_bounds'),
	            set(velocity_y, wave( min(350,max(-250, destination_y-midpoint_y ) ) )),
	            set(velocity_x, wave( min(350,max(-250, destination_x-midpoint_x ) ) ))
	            ] where destination_y = target_y() + altitude_adjustment, where destination_x = target_x() + altitude_adjustment",

on_process_moveup: "[if(solid(level, front + facing*100, y, 1, y2 - y),
	            fire_event('moveup')),fire_event('test_bounds'),
	            set(velocity_y, wave( min(350,max(-250, destination_y-midpoint_y ) ) )),
	            set(velocity_x, wave( min(350,max(-250, destination_x-midpoint_x ) ) ))
	            ] where destination_y = target_y() + altitude_adjustment, where destination_x = target_x() + altitude_adjustment",
	            
on_process_movedown: "[if(solid(level, front + facing*100, y, 1, y2 - y),
	            fire_event('movedown')),fire_event('test_bounds'),
	            set(velocity_y, wave( min(350,max(-250, destination_y-midpoint_y ) ) )),
	            set(velocity_x, wave( min(350,max(-250, destination_x-midpoint_x ) ) ))
	            ] where destination_y = target_y() + altitude_adjustment, where destination_x = target_x() + altitude_adjustment",
	            

editor_info: {
	category: "enemies, general",
	var: [
		{
			name: "x_bound",
			type: "x",
			value: "x - 200",
		},
		{
			name: "x2_bound",
			type: "x",
			value: "x2 + 200",
		},
		{
			name: "desired_y",
			type: "y",
			value: "midpoint_y",
		},
		{
			name: "y_bound",
			type: "y",
			value: "y - 200",
		},
		{
			name: "y2_bound",
			type: "y",
			value: "y2 + 200",
		},
		{
			name: "desired_x",
			type: "x",
			value: "midpoint_x",
		},
	],
},
}
